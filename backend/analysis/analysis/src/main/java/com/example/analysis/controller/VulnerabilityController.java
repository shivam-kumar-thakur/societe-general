package com.example.analysis.controller;

import com.example.analysis.dto.ResponseDTO;
import com.example.analysis.dto.ServiceResponseDTO;
import com.example.analysis.dto.iocDto.RecentIocRequestDTO;
import com.example.analysis.dto.vulnerabilityDto.RecentVulnerabilityRequestDTO;
import com.example.analysis.service.VulnerabilityService;
import jakarta.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/vulnerability")
public class VulnerabilityController {

    private final VulnerabilityService vulnerabilityService;

    public VulnerabilityController(VulnerabilityService vulnerabilityService) {
        this.vulnerabilityService = vulnerabilityService;
    }

    @PostMapping("/recent")
    public ResponseEntity recentVulnerability(@RequestBody @Valid RecentVulnerabilityRequestDTO recentVulnerabilityRequestDTO ){
        ServiceResponseDTO serviceResponseDTO=vulnerabilityService.getRecentVulnerabilities(recentVulnerabilityRequestDTO);
        return ResponseEntity.status(serviceResponseDTO.getStatusCode()).body(new ResponseDTO<>(serviceResponseDTO.isStatusFlag(),serviceResponseDTO.getMessage(),serviceResponseDTO.getData()));
    }


    @GetMapping("/vulnerability-details/{id}")
    public ResponseEntity recentVulnerabilityDetails(@PathVariable("id") String id){
        ServiceResponseDTO serviceResponseDTO=vulnerabilityService.getVulnerabilitiesDetails(id);
        return ResponseEntity.status(serviceResponseDTO.getStatusCode()).body(new ResponseDTO<>(serviceResponseDTO.isStatusFlag(),serviceResponseDTO.getMessage(),serviceResponseDTO.getData()));
    }

}
